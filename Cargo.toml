[package]
name = "rustc_codegen_cranelift"
version = "0.1.0"
authors = ["bjorn3 <bjorn3@users.noreply.github.com>"]
edition = "2018"

[lib]
#crate-type = ["dylib"]

[dependencies]
flate2 = "*"
libc = "*"
rustc_middle = { path = "../librustc_middle" }
rustc_codegen_ssa = { path = "../librustc_codegen_ssa" }
rustc_data_structures = { path = "../librustc_data_structures" }
rustc_errors = { path = "../librustc_errors" }
rustc_fs_util = { path = "../librustc_fs_util" }
rustc_hir = { path = "../librustc_hir" }
rustc_incremental = { path = "../librustc_incremental" }
rustc_index = { path = "../librustc_index" }
rustc_mir = { path = "../librustc_mir" }
rustc_session = { path = "../librustc_session" }
rustc_span = { path = "../librustc_span" }
rustc_symbol_mangling = { path = "../librustc_symbol_mangling" }
rustc_target = { path = "../librustc_target" }
rustc_ast = { path = "../librustc_ast" }



# These have to be in sync with each other
cranelift-codegen = { git = "https://github.com/bytecodealliance/wasmtime/", features = ["unwind"] }
cranelift-frontend = { git = "https://github.com/bytecodealliance/wasmtime/" }
cranelift-module = { git = "https://github.com/bytecodealliance/wasmtime/" }
cranelift-object = { git = "https://github.com/bytecodealliance/wasmtime/" }
target-lexicon = "0.10.0"

ar = "0.8.0"
byteorder = "1.2.7"
indexmap = "1.0.2"
cfg-if = "0.1.10"

[dependencies.object]
version = "0.19.0"
default-features = false
features = ["read", "std", "write"] # We don't need WASM support

[dependencies.gimli]
version = "0.21.0"
default-features = false
features = ["write"] # We don't need read support

# Uncomment to use local checkout of cranelift
[patch."https://github.com/bytecodealliance/wasmtime/"]
cranelift-codegen = { path = "../wasmtime/cranelift/codegen" }
cranelift-frontend = { path = "../wasmtime/cranelift/frontend" }
cranelift-module = { path = "../wasmtime/cranelift/module" }
cranelift-simplejit = { path = "../wasmtime/cranelift/simplejit" }
cranelift-object = { path = "../wasmtime/cranelift/object" }

#[patch.crates-io]
#gimli = { path = "../" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
#cranelift-simplejit = { git = "https://github.com/bytecodealliance/wasmtime/" }
#libloading = "0.6.0"

[profile.dev]
# By compiling dependencies with optimizations, performing tests gets much faster.
opt-level = 3

[profile.dev.package.rustc_codegen_cranelift]
# Disabling optimizations for cg_clif itself makes compilation after a change faster.
opt-level = 0

# Disable optimizations and debuginfo of build scripts and some of the heavy build deps, as the
# execution time of build scripts is so fast that optimizing them slows down the total build time.
[profile.dev.build-override]
opt-level = 0
debug = false

[profile.release.build-override]
opt-level = 0
debug = false

[profile.dev.package.cranelift-codegen-meta]
opt-level = 0
debug = false

[profile.release.package.cranelift-codegen-meta]
opt-level = 0
debug = false

[profile.dev.package.syn]
opt-level = 0
debug = false

[profile.release.package.syn]
opt-level = 0
debug = false
